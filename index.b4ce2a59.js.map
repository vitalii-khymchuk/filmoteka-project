{"mappings":"mEAAAA,EAAiBC,KAAKC,MAAM,26CCG5B,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,KAAMF,SAASC,cAAc,UAG/B,IAAIE,EAAmB,GAgDvB,SAASC,EAAYC,GACfC,EAAiBD,KA+CvB,SAAqBA,GACnB,MAAME,EAAcC,EAAeH,GAC7BI,EAAuBF,EAAYG,WACvCC,GAAKA,EAAEC,KAAOT,EAAiBS,KAEjCL,EAAYM,OAAOJ,EAAsB,GACzCK,EAAkBT,EAASE,E,CApDzBQ,CAAYV,GACZW,EAAcX,MAoClB,SAAmBA,GACjB,MAAME,EAAcC,EAAeH,GACnCE,EAAYU,KAAKd,GACjBW,EAAkBT,EAASE,E,CArCzBW,CAAUb,GACVW,EAAcX,G,CAOlB,SAASC,EAAiBD,GACxB,MAAME,EAAcC,EAAeH,GACnC,OAAKE,EAIEA,EAAYY,MAAKR,GAAKA,EAAEC,KAAOT,EAAiBS,MAHrDQ,aAAaC,QAAQhB,EAAS,OACvB,E,CAOX,SAASW,EAAcX,GACrB,MAAMiB,EAAahB,EAAiBD,GAAW,eAAiB,UAEhE,OAAQA,GACN,IAAK,UAEH,YADAP,EAAKC,KAAKwB,aAAeD,EAAajB,GAASmB,eAEjD,IAAK,QAEH,YADA1B,EAAKI,KAAKqB,aAAeD,EAAajB,GAASmB,e,CA4BrD,SAAShB,EAAeH,GACtB,OAAOT,KAAKC,MAAMuB,aAAaK,QAAQpB,G,CAKzC,SAASS,EAAkBT,EAASqB,GAClCN,aAAaC,QAAQhB,EAAST,KAAK+B,UAAUD,G,EAhH/C,SAA8BA,GAC5B,MAAME,MACJA,EAAKC,cACLA,EAAaC,OACbA,EAAMlB,GACNA,EAAEmB,kBACFA,EAAiBC,eACjBA,EAAcC,SACdA,EAAQC,WACRA,EAAUC,YACVA,EAAWC,aACXA,EAAYC,MACZA,EAAKC,MACLA,EAAKC,aACLA,EAAYC,WACZA,GACEd,EAEEe,EAAYX,EAAOY,KAAIC,GAASA,EAAM/B,KAE5CT,EAAmB,CACjByB,MAAOA,EACPC,cAAeA,EACfY,UAAWA,EACX7B,GAAIA,EACJmB,kBAAmBA,EACnBC,eAAgBA,EAChBC,SAAUA,EACVC,WAAYA,EACZC,YAAaA,EACbC,aAAcA,EACdC,MAAOA,EACPC,MAAOA,EACPC,aAAcA,EACdC,WAAYA,GAmFd1C,EAAKC,KAAK6C,iBAAiB,SAAS,IAAMxC,EAAY,aACtDN,EAAKI,KAAK0C,iBAAiB,SAAS,IAAMxC,EAAY,WAhFtDY,EAAc,WACdA,EAAc,Q,CAuFhB6B,CAAqBC,EAAAnD,ICvIrB,MAAMoD,EAAO,CACXC,WAAYhD,SAASC,cAAc,eACnCgD,SAAUjD,SAASC,cAAc,cAmBnC,SAASiD,EAAgBC,EAAWC,GAClCD,EAAUE,UAAUC,IAAI,UACxBF,EAAaC,UAAUE,OAAO,S,CAKhC,SAASC,EAAkBnD,GACzB,MAAMqB,EAAOlB,EAAeH,GAE5BoD,QAAQC,IAAIhC,E,CA1BdqB,EAAKC,WAAWJ,iBAAiB,SAI1B,WACLY,EAAkB,WAClBN,EAAgBH,EAAKC,WAAYD,EAAKE,S,IALxCF,EAAKE,SAASL,iBAAiB,SAQxB,WACLY,EAAkB,SAClBN,EAAgBH,EAAKE,SAAUF,EAAKC,W","sources":["src/data/one.json","src/js/localStorageAPI/saveMovie.js","src/js/localStorageAPI/renderSavedMovies.js"],"sourcesContent":["{\n  \"adult\": false,\n  \"backdrop_path\": \"/d6MhreFdMHONqX3iZlJGCF8UkIt.jpg\",\n  \"belongs_to_collection\": null,\n  \"budget\": 200000000,\n  \"genres\": [\n    { \"id\": 28, \"name\": \"Action\" },\n    { \"id\": 12, \"name\": \"Adventure\" },\n    { \"id\": 14, \"name\": \"Fantasy\" }\n  ],\n  \"homepage\": \"https://www.dc.com/BlackAdam\",\n  \"id\": 436270,\n  \"imdb_id\": \"tt6443346\",\n  \"original_language\": \"en\",\n  \"original_title\": \"Black Adam\",\n  \"overview\": \"Nearly 5,000 years after he was bestowed with the almighty powers of the Egyptian gods—and imprisoned just as quickly—Black Adam is freed from his earthly tomb, ready to unleash his unique form of justice on the modern world.\",\n  \"popularity\": 4912.22,\n  \"poster_path\": \"/3zXceNTtyj5FLjwQXuPvLYK5YYL.jpg\",\n  \"production_companies\": [\n    {\n      \"id\": 12,\n      \"logo_path\": \"/iaYpEp3LQmb8AfAtmTvpqd4149c.png\",\n      \"name\": \"New Line Cinema\",\n      \"origin_country\": \"US\"\n    },\n    {\n      \"id\": 34081,\n      \"logo_path\": null,\n      \"name\": \"Flynn Picture Company\",\n      \"origin_country\": \"US\"\n    },\n    {\n      \"id\": 73669,\n      \"logo_path\": \"/7tmSGstK3KwgcDIuBYLTAayjit9.png\",\n      \"name\": \"Seven Bucks Productions\",\n      \"origin_country\": \"US\"\n    },\n    {\n      \"id\": 128064,\n      \"logo_path\": \"/13F3Jf7EFAcREU0xzZqJnVnyGXu.png\",\n      \"name\": \"DC Films\",\n      \"origin_country\": \"US\"\n    }\n  ],\n  \"production_countries\": [\n    { \"iso_3166_1\": \"US\", \"name\": \"United States of America\" }\n  ],\n  \"release_date\": \"2022-10-19\",\n  \"revenue\": 140000000,\n  \"runtime\": 125,\n  \"spoken_languages\": [\n    { \"english_name\": \"English\", \"iso_639_1\": \"en\", \"name\": \"English\" }\n  ],\n  \"status\": \"Released\",\n  \"tagline\": \"The world needed a hero. It got Black Adam.\",\n  \"title\": \"Black Adam\",\n  \"video\": false,\n  \"vote_average\": 7.138,\n  \"vote_count\": 488\n}\n","import movieData from '../../data/one.json';\nexport { prepareMovieToSaving, getSavedMovies, removeEventListeners };\n\nconst refs = {\n  btn1: document.querySelector('.btn1'),\n  btn2: document.querySelector('.btn2'),\n};\n\nlet currentMovieData = {};\n\n//this function convert and save data to variable in correct format\nfunction prepareMovieToSaving(data) {\n  const {\n    adult,\n    backdrop_path,\n    genres,\n    id,\n    original_language,\n    original_title,\n    overview,\n    popularity,\n    poster_path,\n    release_date,\n    title,\n    video,\n    vote_average,\n    vote_count,\n  } = data;\n\n  const genre_ids = genres.map(genre => genre.id);\n\n  currentMovieData = {\n    adult: adult,\n    backdrop_path: backdrop_path,\n    genre_ids: genre_ids,\n    id: id,\n    original_language: original_language,\n    original_title: original_title,\n    overview: overview,\n    popularity: popularity,\n    poster_path: poster_path,\n    release_date: release_date,\n    title: title,\n    video: video,\n    vote_average: vote_average,\n    vote_count: vote_count,\n  };\n\n  addEvtListeners();\n  changeBtnName('watched');\n  changeBtnName('queue');\n}\n////////////////////////////////////////////////////////////////////////////////////////////\n\n//this call other functions (that save or delete movie from local storage ),\n//depends on available this movie in loc storage\nfunction toggleMovie(libName) {\n  if (isMovieInStorage(libName)) {\n    deleteMovie(libName);\n    changeBtnName(libName);\n  } else {\n    saveMovie(libName);\n    changeBtnName(libName);\n  }\n}\n////////////////////////////////////////////////////////////////////////////////////////////////\n\n//check if current movie in storage by comparating id of all movies in loc storage with\n// id of movie that we are trying to save\nfunction isMovieInStorage(libName) {\n  const savedMovies = getSavedMovies(libName);\n  if (!savedMovies) {\n    localStorage.setItem(libName, '[]');\n    return false;\n  }\n  return savedMovies.some(e => e.id === currentMovieData.id);\n}\n//////////////////////////////////////////////////////////////////////////////////////\n\n//change btn name (foe example delete movie to add movie)\nfunction changeBtnName(libName) {\n  const partOfName = isMovieInStorage(libName) ? 'delete from ' : 'add to ';\n\n  switch (libName) {\n    case 'watched':\n      refs.btn1.textContent = (partOfName + libName).toUpperCase();\n      return;\n    case 'queue':\n      refs.btn2.textContent = (partOfName + libName).toUpperCase();\n      return;\n  }\n}\n//////////////////////////////////////////////////////////////////////////////////////\n\n//get data from local storage, add new movie and save new data\nfunction saveMovie(libName) {\n  const savedMovies = getSavedMovies(libName);\n  savedMovies.push(currentMovieData);\n  rewriteLocStorage(libName, savedMovies);\n  // makeMarkup(savedMovies);\n}\n//////////////////////////////////////////////////////////////////////////////\n\n//get data from local storage, delete movie and save new data\nfunction deleteMovie(libName) {\n  const savedMovies = getSavedMovies(libName);\n  const indexOfMovieToDelete = savedMovies.findIndex(\n    e => e.id === currentMovieData.id\n  );\n  savedMovies.splice(indexOfMovieToDelete, 1);\n  rewriteLocStorage(libName, savedMovies);\n  // makeMarkup(savedMovies);\n}\n///////////////////////////////////////////////////////////////////////////\n\n// get saved movie from local storage\nfunction getSavedMovies(libName) {\n  return JSON.parse(localStorage.getItem(libName));\n}\n////////////////////////////////////////////////////////////////\n\n//put new data to local storage\nfunction rewriteLocStorage(libName, data) {\n  localStorage.setItem(libName, JSON.stringify(data));\n}\n///////////////////////////////////////////////////////////////////////////\n\nfunction addEvtListeners() {\n  refs.btn1.addEventListener('click', () => toggleMovie('watched'));\n  refs.btn2.addEventListener('click', () => toggleMovie('queue'));\n}\n\nfunction removeEventListeners() {\n  refs.btn1.replaceWith(refs.btn1.cloneNode(true));\n  refs.btn2.replaceWith(refs.btn2.cloneNode(true));\n}\n\nprepareMovieToSaving(movieData);\n\n//test row special for Vlad\n","import { getSavedMovies } from './saveMovie';\n\nconst refs = {\n  watchedBtn: document.querySelector('.watchedBtn'),\n  queueBtn: document.querySelector('.queueBtn'),\n};\n\nrefs.watchedBtn.addEventListener('click', onWatchedBtnHandler);\nrefs.queueBtn.addEventListener('click', onQueueBtnHandler);\n\n//Callbacks of buttons event listeners\nexport function onWatchedBtnHandler() {\n  renderSavedMovies('watched');\n  switchActiveBtn(refs.watchedBtn, refs.queueBtn);\n}\n\nexport function onQueueBtnHandler() {\n  renderSavedMovies('queue');\n  switchActiveBtn(refs.queueBtn, refs.watchedBtn);\n}\n//////////////////////////////////////////////////////////\n\n//add class to active button and remove from not active\nfunction switchActiveBtn(activeBtn, notActiveBtn) {\n  activeBtn.classList.add('active');\n  notActiveBtn.classList.remove('active');\n}\n//////////////////////////////////////////////////////\n\n//call function that create markup with data from local storage\nfunction renderSavedMovies(libName) {\n  const data = getSavedMovies(libName);\n  //   makeMarkup(data);\n  console.log(data);\n}\n/////////////////////////////////////////////////////////\n"],"names":["$37cf2a2e391538d4$exports","JSON","parse","$f567c61d95b81b31$var$refs","btn1","document","querySelector","btn2","$f567c61d95b81b31$var$currentMovieData","$f567c61d95b81b31$var$toggleMovie","libName","$f567c61d95b81b31$var$isMovieInStorage","savedMovies","$f567c61d95b81b31$export$e4d79df5fdc6a286","indexOfMovieToDelete","findIndex","e","id","splice","$f567c61d95b81b31$var$rewriteLocStorage","$f567c61d95b81b31$var$deleteMovie","$f567c61d95b81b31$var$changeBtnName","push","$f567c61d95b81b31$var$saveMovie","some","localStorage","setItem","partOfName","textContent","toUpperCase","getItem","data","stringify","adult","backdrop_path","genres","original_language","original_title","overview","popularity","poster_path","release_date","title","video","vote_average","vote_count","genre_ids","map","genre","addEventListener","$f567c61d95b81b31$export$aee5cdcefc90adfc","$parcel$interopDefault","$40fc206b0f2ce6e1$var$refs","watchedBtn","queueBtn","$40fc206b0f2ce6e1$var$switchActiveBtn","activeBtn","notActiveBtn","classList","add","remove","$40fc206b0f2ce6e1$var$renderSavedMovies","console","log"],"version":3,"file":"index.b4ce2a59.js.map"}